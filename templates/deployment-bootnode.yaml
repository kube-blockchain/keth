---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bootnode
    component: {name}
  name: {name}
  namespace: {namespace}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      component: {name}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        component: {name}
    spec:
      containers:
      - args:
        - -c
        - |
          bootnode \
            --nodekey=/etc/bootnode/node.key \
            --verbosity=4
        command:
        - /bin/sh
        image: ethereum/client-go:alltools-v1.9.15
        imagePullPolicy: IfNotPresent
        name: bootnode
        ports:
        - containerPort: 30301
          name: discovery
          protocol: UDP
        resources: {{}}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/bootnode
          name: data
      - args:
        - -c
        - |
          while true; do
            printf "HTTP/1.1 200 OK\n\nenode://$(bootnode -writeaddress --nodekey=/etc/bootnode/node.key)@$(POD_IP):30301" | nc -l -v -p 80 || break
          done
        command:
        - /bin/sh
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        image: ethereum/client-go:alltools-v1.9.15
        imagePullPolicy: IfNotPresent
        name: bootnode-server
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {{}}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/bootnode
          name: data
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - bootnode
        - --genkey=/etc/bootnode/node.key
        image: ethereum/client-go:alltools-v1.9.15
        imagePullPolicy: IfNotPresent
        name: genkey
        resources: {{}}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/bootnode
          name: data
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {{}}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {{}}
        name: data
