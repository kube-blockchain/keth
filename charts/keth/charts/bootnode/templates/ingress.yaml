{{- if and .Values.global.bootnode.enabled .Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  {{- if .Values.ingress.annotations }}
  annotations:
    {{ .Values.ingress.annotations | toYaml | indent 4 | trim }}
  {{- end }}
  labels:
    {{ include "bootnode.labels" . | indent 4  | trim }}
    {{- range $key, $value := .Values.ingress.extraLabels }}
    {{ $key }}: {{ $value }}
    {{- end }}
  name: {{ template "bootnode.fullname" . }}
  namespace: {{ $.Release.Namespace }}
spec:
  {{- if .Values.ingress.className }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  rules:
  {{- $extraPaths := .Values.ingress.extraPaths }}
  {{- $fullName := include "bootnode.fullname" . }}
  {{- $servicePort := .Values.service.port }}
  {{- range .Values.ingress.hosts }}
    {{- $url := splitList "/" . }}
    - host: {{ first $url }}
      http:
        paths:
          {{- if $extraPaths }}
          {{ toYaml $extraPaths | indent 10 | trim }}
          {{- end }}
          - path: /{{ rest $url | join "/" }}
            backend:
              serviceName: {{ $fullName }}
              servicePort: {{ $servicePort }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{ toYaml .Values.ingress.tls | indent 4 | trim }}
  {{- end }}
{{- end }}
