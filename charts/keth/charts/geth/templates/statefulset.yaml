{{- if .Values.enabled }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels: {{ include "geth.labels" . | nindent 4 }}
    component: {{ template "geth.fullname" . }}
  name: {{ template "geth.fullname" . }}
  namespace: {{ $.Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      component: {{ template "geth.fullname" . }}
  serviceName: {{ template "geth.fullname" . }}
  template:
    metadata:
      labels:
        component: {{ template "geth.fullname" . }}
    spec:
      containers:
        - args:
            - -c
            - |
              geth \
                {{- if .Values.geth.datadir }}
                --datadir={{ .Values.geth.datadir }} \
                {{- end }}
                --ethstats="${POD_NAME}.${{POD_NAMESPACE}}:${ETHSTATS_SECRET}@${ETHSTATS_SVC}" \
                {{- if .Values.geth.ropsten }}
                --ropsten \
                {{- end }}
                {{- if .Values.geth.rpc }}
                --rpc \
                {{- end }}
                {{- if .Values.geth.rpcaddr }}
                --rpcaddr={{ .Values.geth.rpcaddr }} \
                {{- end }}
                {{- if .Values.geth.rpcapi }}
                --rpcapi={{ .Values.geth.rpcapi }} \
                {{- end }}
                {{- if .Values.geth.rpccorsdomain }}
                --rpccorsdomain={{ .Values.geth.rpccorsdomain }} \
                {{- end }}
                {{- if .Values.geth.rpcvhosts }}
                --rpcvhosts={{ .Values.geth.rpcvhosts }} \
                {{- end }}
                {{- if .Values.geth.syncmode }}
                --syncmode={{ .Values.geth.syncmode }} \
                {{- end }}
                {{- if .Values.geth.verbosity }}
                --verbosity={{ .Values.geth.verbosity }} \
                {{- end }}
                {{- if .Values.geth.ws }}
                --ws \
                {{- end }}
                {{- if .Values.geth.wsaddr }}
                --wsaddr={{ .Values.geth.wsaddr }} \
                {{- end }}
                {{- if .Values.geth.wsapi }}
                --wsapi={{ .Values.geth.wsapi }} \
                {{- end }}
          command:
            - /bin/sh
          env:
            - name: ETHSTATS_SVC
              value: release-ethstats
            - name: ETHSTATS_SECRET
              valueFrom:
                secretKeyRef:
                  key: WS_SECRET
                  name: {{ template "geth.ethstatsSecretName" . }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          image: ethereum/client-go:v1.9.15
          imagePullPolicy: IfNotPresent
          name: geth-api
          ports:
            - containerPort: 8545
              name: rpc
              protocol: TCP
            - containerPort: 8546
              name: ws
              protocol: TCP
            - containerPort: 30303
              name: discovery-udp
              protocol: UDP
            - containerPort: 30303
              name: discovery-tcp
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /root/.ethereum
              name: data
      dnsPolicy: ClusterFirst
      initContainers:
        - args:
            - -c
            - geth account import --password /root/.ethereum/account/accountSecret /root/.ethereum/account/accountPrivateKey || true
          command:
            - /bin/sh
          image: ethereum/client-go:v1.9.15
          imagePullPolicy: IfNotPresent
          name: import-account
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /root/.ethereum
              name: data
            - mountPath: /root/.ethereum/account
              name: account
              readOnly: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 10
      volumes:
        - name: account
          secret:
            defaultMode: 420
            secretName: {{ template "geth.secretName" . }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
{{- end -}}
